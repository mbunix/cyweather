{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport styles from \"./Header.module.scss\";\nimport { geocodeByAddress } from \"react-places-autocomplete\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nimport Search from \"../Search/Search\";\nimport { convertRegion } from \"../../utils/stateNameAbbreviation\";\nimport { getPosition, fetchLocation, fetchWeather } from \"../../api/APIUtils\";\nimport { toast } from \"react-toastify\";\nimport { InputGroupButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup } from \"reactstrap\";\n\nconst header = props => {\n  const {\n    0: search,\n    1: setSearch\n  } = useState({\n    address: \"\"\n  });\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n  const weather = useStoreState(state => state.weather.weatherData);\n  const setSpinner = useStoreActions(actions => actions.spinner.setSpinner);\n  const setWeather = useStoreActions(actions => actions.weather.setWeatherData);\n  const setLatitude = useStoreActions(actions => actions.location.setLocationLatitude);\n  const setLongitude = useStoreActions(actions => actions.location.setLocationLongitude);\n  const setCity = useStoreActions(actions => actions.location.setLocationCity);\n  const setRegion = useStoreActions(actions => actions.location.setLocationRegion);\n  const latitude = useStoreState(state => state.location.locationLatitude);\n  const longitude = useStoreState(state => state.location.locationLongitude);\n  let historyArray = null;\n  let searchHistory = null;\n\n  if (false) {\n    historyArray = localStorage.getItem(\"search-history\") ? JSON.parse(localStorage.getItem(\"search-history\")) : [];\n    searchHistory = JSON.parse(localStorage.getItem(\"search-history\"));\n\n    if (searchHistory === undefined) {\n      const keys = [\"city\", \"region\"],\n            filtered = searchHistory.filter((s => o => (k => !s.has(k) && s.add(k))(keys.map(k => o[k]).join(\"|\")))(new Set()));\n      localStorage.setItem(\"search-history\", JSON.stringify(filtered));\n    }\n  }\n\n  const clearAllHistory = () => {\n    localStorage.removeItem(\"search-history\");\n  };\n\n  const deleteSpecificHistory = index => {\n    let newHistory = [...searchHistory];\n    newHistory.splice(index, 1);\n    localStorage.setItem(\"search-history\", JSON.stringify(newHistory));\n\n    if (newHistory === undefined || newHistory.length == 0) {\n      localStorage.removeItem(\"search-history\");\n    }\n  };\n\n  const useSpecificHistory = index => {\n    let newHistory = [...searchHistory];\n    setSpinner(true);\n    setCity(newHistory[index].city);\n    setRegion(newHistory[index].region);\n    fetchWeather(newHistory[index].lat, newHistory[index].lng).then(results => {\n      setWeather(results);\n      setSpinner(false);\n    });\n  };\n\n  const handleSearchChange = address => {\n    setSearch({\n      address\n    });\n  };\n\n  const handleSearchSelect = address => {\n    setSpinner(true);\n    geocodeByAddress(address).then(results => results[0]).then(data => {\n      const dataAddress = data.address_components;\n      const lat = data.geometry.location.lat();\n      const lng = data.geometry.location.lng();\n      let city = null;\n      let region = null;\n      setLatitude(lat);\n      setLongitude(lng);\n      setSearch({\n        address: \"\"\n      });\n\n      for (var i = 0; i < dataAddress.length; i++) {\n        var addressObj = dataAddress[i];\n\n        for (var j = 0; j < addressObj.types.length; j++) {\n          if (addressObj.types[j] === \"locality\") {\n            setCity(addressObj.long_name);\n            city = addressObj.long_name;\n          }\n\n          if (addressObj.types[j] === \"administrative_area_level_1\") {\n            setRegion(addressObj.short_name);\n            region = addressObj.short_name;\n          }\n        }\n      }\n\n      historyArray.push({\n        city: city,\n        region: region,\n        lat: lat,\n        lng: lng\n      });\n      localStorage.setItem(\"search-history\", JSON.stringify(historyArray));\n      fetchWeather(lat, lng).then(results => {\n        setWeather(results);\n        setSpinner(false);\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const refreshLocation = () => {\n    setSpinner(true);\n    notify(\"Refreshing Weather Data\");\n    fetchWeather(latitude, longitude).then(results => {\n      setWeather(results);\n      setSpinner(false);\n      toast.dismiss(toastId);\n    });\n  };\n\n  function getWeatherLocation(lat, lng) {\n    fetchLocation(lat, lng).then(results => {\n      const json = results.features[0].properties.address;\n\n      if (json.state) {\n        let stateAbbr = convertRegion(json.state);\n        setRegion(stateAbbr);\n      } else if (json.country) {\n        setRegion(json.country);\n      }\n\n      if (json.locality) {\n        setCity(json.locality);\n      } else if (json.town) {\n        setCity(json.town);\n      } else if (json.city) {\n        setCity(json.city);\n      } else if (json.county) {\n        setCity(json.county);\n      }\n    });\n    fetchWeather(lat, lng).then(results => {\n      setWeather(results);\n      setSpinner(false);\n      toast.dismiss(toastId);\n    });\n  }\n\n  let toastId = null;\n\n  const notify = data => toastId = toast.info(data, {\n    autoClose: false\n  });\n\n  const update = data => toast.update(toastId, {\n    render: data,\n    type: toast.TYPE.SUCCESS,\n    autoClose: 5000\n  });\n\n  const useLocation = () => {\n    setSpinner(true);\n    setDropdownOpen(!dropdownOpen);\n    notify(\"Hang tight! Checking your location.\");\n    getPosition().then(results => {\n      const lat = results.coords.latitude;\n      const lng = results.coords.longitude;\n      setLatitude(lat);\n      setLongitude(lng);\n      getWeatherLocation(lat, lng);\n    }).catch(error => {\n      setSpinner(false);\n      toast.update(toastId, {\n        render: `Error! ${error.message}`,\n        type: toast.TYPE.ERROR,\n        autoClose: 5000\n      });\n    });\n  };\n\n  return __jsx(React.Fragment, null, weather && __jsx(\"header\", {\n    className: styles[\"header\"]\n  }, __jsx(\"div\", {\n    className: \"container-fluid\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-sm-12 col-md-6 col-lg-6 col-xl-4 mx-auto\"\n  }, __jsx(\"div\", {\n    className: styles.mid\n  }, __jsx(InputGroup, null, __jsx(Search, {\n    address: search.address,\n    changed: handleSearchChange,\n    selected: handleSearchSelect\n  }), __jsx(InputGroupButtonDropdown, {\n    addonType: \"append\",\n    isOpen: dropdownOpen,\n    toggle: toggleDropdown\n  }, __jsx(DropdownToggle, {\n    className: styles[\"btn-more\"]\n  }, __jsx(\"svg\", {\n    height: \"512\",\n    viewBox: \"0 0 515.555 515.555\",\n    width: \"512\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"M303.347 18.875c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 212.209c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 405.541c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0\"\n  }))), __jsx(DropdownMenu, {\n    right: true,\n    className: styles[\"dropdown-custom\"]\n  }, __jsx(DropdownItem, {\n    onClick: refreshLocation\n  }, \"Refresh Weather\", __jsx(\"span\", {\n    className: styles[\"btn-right\"]\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\"\n  }, __jsx(\"path\", {\n    d: \"M493.815 70.629c-11.001-1.003-20.73 7.102-21.733 18.102l-2.65 29.069C424.473 47.194 346.429 0 256 0 158.719 0 72.988 55.522 30.43 138.854c-5.024 9.837-1.122 21.884 8.715 26.908 9.839 5.024 21.884 1.123 26.908-8.715C102.07 86.523 174.397 40 256 40c74.377 0 141.499 38.731 179.953 99.408l-28.517-20.367c-8.989-6.419-21.48-4.337-27.899 4.651-6.419 8.989-4.337 21.479 4.651 27.899l86.475 61.761c12.674 9.035 30.155.764 31.541-14.459l9.711-106.53c1.004-11.001-7.1-20.731-18.1-21.734zM472.855 346.238c-9.838-5.023-21.884-1.122-26.908 8.715C409.93 425.477 337.603 472 256 472c-74.377 0-141.499-38.731-179.953-99.408l28.517 20.367c8.989 6.419 21.479 4.337 27.899-4.651 6.419-8.989 4.337-21.479-4.651-27.899l-86.475-61.761c-12.519-8.944-30.141-.921-31.541 14.459L.085 419.637c-1.003 11 7.102 20.73 18.101 21.733 11.014 1.001 20.731-7.112 21.733-18.102l2.65-29.069C87.527 464.806 165.571 512 256 512c97.281 0 183.012-55.522 225.57-138.854 5.024-9.837 1.122-21.884-8.715-26.908z\"\n  })))), __jsx(DropdownItem, {\n    onClick: useLocation\n  }, \"Use My Location\", __jsx(\"span\", {\n    className: styles[\"btn-right\"]\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 51.636 51.636\"\n  }, __jsx(\"path\", {\n    d: \"M51.353.914a.999.999 0 00-1.135-.213L.583 23.481a1 1 0 00.252 1.895l22.263 3.731 2.545 21.038a1.002 1.002 0 001.889.324l24-48.415a1 1 0 00-.179-1.14z\"\n  })))), searchHistory != null && __jsx(React.Fragment, null, __jsx(DropdownItem, {\n    divider: true\n  }), __jsx(DropdownItem, {\n    header: true\n  }, \"Search History \"), searchHistory.map((item, index) => {\n    return __jsx(DropdownItem, {\n      key: index\n    }, __jsx(\"span\", {\n      onClick: () => {\n        useSpecificHistory(index);\n      }\n    }, item.city, \", \", item.region), __jsx(\"span\", {\n      className: [styles[\"btn-remove\"], styles[\"btn-right\"]].join(\" \"),\n      onClick: () => {\n        deleteSpecificHistory(index);\n      }\n    }, __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 512.001 512.001\"\n    }, __jsx(\"path\", {\n      d: \"M284.286 256.002L506.143 34.144c7.811-7.811 7.811-20.475 0-28.285-7.811-7.81-20.475-7.811-28.285 0L256 227.717 34.143 5.859c-7.811-7.811-20.475-7.811-28.285 0-7.81 7.811-7.811 20.475 0 28.285l221.857 221.857L5.858 477.859c-7.811 7.811-7.811 20.475 0 28.285a19.938 19.938 0 0014.143 5.857 19.94 19.94 0 0014.143-5.857L256 284.287l221.857 221.857c3.905 3.905 9.024 5.857 14.143 5.857s10.237-1.952 14.143-5.857c7.811-7.811 7.811-20.475 0-28.285L284.286 256.002z\"\n    }))));\n  }), __jsx(DropdownItem, {\n    divider: true\n  }), __jsx(DropdownItem, {\n    className: styles[\"btn-last\"],\n    onClick: () => {\n      clearAllHistory();\n    }\n  }, \"Clear Search History\")))))))))));\n};\n\nexport default header;","map":{"version":3,"names":["useState","styles","geocodeByAddress","useStoreActions","useStoreState","Search","convertRegion","getPosition","fetchLocation","fetchWeather","toast","InputGroupButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","InputGroup","header","props","search","setSearch","address","dropdownOpen","setDropdownOpen","weather","state","weatherData","setSpinner","actions","spinner","setWeather","setWeatherData","setLatitude","location","setLocationLatitude","setLongitude","setLocationLongitude","setCity","setLocationCity","setRegion","setLocationRegion","latitude","locationLatitude","longitude","locationLongitude","historyArray","searchHistory","localStorage","getItem","JSON","parse","undefined","keys","filtered","filter","s","o","k","has","add","map","join","Set","setItem","stringify","clearAllHistory","removeItem","deleteSpecificHistory","index","newHistory","splice","length","useSpecificHistory","city","region","lat","lng","then","results","handleSearchChange","handleSearchSelect","data","dataAddress","address_components","geometry","i","addressObj","j","types","long_name","short_name","push","catch","error","console","toggleDropdown","refreshLocation","notify","dismiss","toastId","getWeatherLocation","json","features","properties","stateAbbr","country","locality","town","county","info","autoClose","update","render","type","TYPE","SUCCESS","useLocation","coords","message","ERROR","mid","item"],"sources":["C:/Users/bentexstudiosio/Internship/cyweather/components/Header/Header.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styles from \"./Header.module.scss\";\r\nimport { geocodeByAddress } from \"react-places-autocomplete\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport Search from \"../Search/Search\";\r\nimport { convertRegion } from \"../../utils/stateNameAbbreviation\";\r\nimport { getPosition, fetchLocation, fetchWeather } from \"../../api/APIUtils\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  InputGroupButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroup\r\n} from \"reactstrap\";\r\n\r\nconst header = props => {\r\n  const [search, setSearch] = useState({\r\n    address: \"\"\r\n  });\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const weather = useStoreState(state => state.weather.weatherData);\r\n\r\n  const setSpinner = useStoreActions(actions => actions.spinner.setSpinner);\r\n  const setWeather = useStoreActions(actions => actions.weather.setWeatherData);\r\n  const setLatitude = useStoreActions(actions => actions.location.setLocationLatitude);\r\n  const setLongitude = useStoreActions(actions => actions.location.setLocationLongitude);\r\n  const setCity = useStoreActions(actions => actions.location.setLocationCity);\r\n  const setRegion = useStoreActions(actions => actions.location.setLocationRegion);\r\n\r\n  const latitude = useStoreState(state => state.location.locationLatitude);\r\n  const longitude = useStoreState(state => state.location.locationLongitude);\r\n\r\n  let historyArray = null;\r\n  let searchHistory = null;\r\n  if (typeof window !== \"undefined\") {\r\n    historyArray = localStorage.getItem(\"search-history\")\r\n      ? JSON.parse(localStorage.getItem(\"search-history\"))\r\n      : [];\r\n    searchHistory = JSON.parse(localStorage.getItem(\"search-history\"));\r\n    if (searchHistory === undefined) {\r\n      const keys = [\"city\", \"region\"],\r\n        filtered = searchHistory.filter(\r\n          (s => o => (k => !s.has(k) && s.add(k))(keys.map(k => o[k]).join(\"|\")))(new Set())\r\n        );\r\n      localStorage.setItem(\"search-history\", JSON.stringify(filtered));\r\n    }\r\n  }\r\n\r\n  const clearAllHistory = () => {\r\n    localStorage.removeItem(\"search-history\");\r\n  };\r\n\r\n  const deleteSpecificHistory = index => {\r\n    let newHistory = [...searchHistory];\r\n    newHistory.splice(index, 1);\r\n    localStorage.setItem(\"search-history\", JSON.stringify(newHistory));\r\n    if (newHistory === undefined || newHistory.length == 0) {\r\n      localStorage.removeItem(\"search-history\");\r\n    }\r\n  };\r\n\r\n  const useSpecificHistory = index => {\r\n    let newHistory = [...searchHistory];\r\n    setSpinner(true);\r\n    setCity(newHistory[index].city);\r\n    setRegion(newHistory[index].region);\r\n    fetchWeather(newHistory[index].lat, newHistory[index].lng).then(results => {\r\n      setWeather(results);\r\n      setSpinner(false);\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = address => {\r\n    setSearch({ address });\r\n  };\r\n  const handleSearchSelect = address => {\r\n    setSpinner(true);\r\n    geocodeByAddress(address)\r\n      .then(results => results[0])\r\n      .then(data => {\r\n        const dataAddress = data.address_components;\r\n        const lat = data.geometry.location.lat();\r\n        const lng = data.geometry.location.lng();\r\n        let city = null;\r\n        let region = null;\r\n        setLatitude(lat);\r\n        setLongitude(lng);\r\n        setSearch({ address: \"\" });\r\n        for (var i = 0; i < dataAddress.length; i++) {\r\n          var addressObj = dataAddress[i];\r\n          for (var j = 0; j < addressObj.types.length; j++) {\r\n            if (addressObj.types[j] === \"locality\") {\r\n              setCity(addressObj.long_name);\r\n              city = addressObj.long_name;\r\n            }\r\n            if (addressObj.types[j] === \"administrative_area_level_1\") {\r\n              setRegion(addressObj.short_name);\r\n              region = addressObj.short_name;\r\n            }\r\n          }\r\n        }\r\n        historyArray.push({ city: city, region: region, lat: lat, lng: lng });\r\n        localStorage.setItem(\"search-history\", JSON.stringify(historyArray));\r\n        fetchWeather(lat, lng).then(results => {\r\n          setWeather(results);\r\n          setSpinner(false);\r\n        });\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n  const refreshLocation = () => {\r\n    setSpinner(true);\r\n    notify(\"Refreshing Weather Data\");\r\n    fetchWeather(latitude, longitude).then(results => {\r\n      setWeather(results);\r\n      setSpinner(false);\r\n      toast.dismiss(toastId);\r\n    });\r\n  };\r\n\r\n  function getWeatherLocation(lat, lng) {\r\n    fetchLocation(lat, lng).then(results => {\r\n      const json = results.features[0].properties.address;\r\n      if (json.state) {\r\n        let stateAbbr = convertRegion(json.state);\r\n        setRegion(stateAbbr);\r\n      } else if (json.country) {\r\n        setRegion(json.country);\r\n      }\r\n      if (json.locality) {\r\n        setCity(json.locality);\r\n      } else if (json.town) {\r\n        setCity(json.town);\r\n      } else if (json.city) {\r\n        setCity(json.city);\r\n      } else if (json.county) {\r\n        setCity(json.county);\r\n      }\r\n    });\r\n    fetchWeather(lat, lng).then(results => {\r\n      setWeather(results);\r\n      setSpinner(false);\r\n      toast.dismiss(toastId);\r\n    });\r\n  }\r\n\r\n  let toastId = null;\r\n\r\n  const notify = data => (toastId = toast.info(data, { autoClose: false }));\r\n  const update = data =>\r\n    toast.update(toastId, { render: data, type: toast.TYPE.SUCCESS, autoClose: 5000 });\r\n\r\n  const useLocation = () => {\r\n    setSpinner(true);\r\n    setDropdownOpen(!dropdownOpen);\r\n    notify(\"Hang tight! Checking your location.\");\r\n    getPosition()\r\n      .then(results => {\r\n        const lat = results.coords.latitude;\r\n        const lng = results.coords.longitude;\r\n        setLatitude(lat);\r\n        setLongitude(lng);\r\n        getWeatherLocation(lat, lng);\r\n      })\r\n      .catch(error => {\r\n        setSpinner(false);\r\n        toast.update(toastId, {\r\n          render: `Error! ${error.message}`,\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 5000\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {weather && (\r\n        <header className={styles[\"header\"]}>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12 col-md-6 col-lg-6 col-xl-4 mx-auto\">\r\n                <div className={styles.mid}>\r\n                  <InputGroup>\r\n                    <Search\r\n                      address={search.address}\r\n                      changed={handleSearchChange}\r\n                      selected={handleSearchSelect}\r\n                    />\r\n                    <InputGroupButtonDropdown\r\n                      addonType=\"append\"\r\n                      isOpen={dropdownOpen}\r\n                      toggle={toggleDropdown}>\r\n                      <DropdownToggle className={styles[\"btn-more\"]}>\r\n                      <svg height=\"512\" viewBox=\"0 0 515.555 515.555\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M303.347 18.875c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 212.209c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0M303.347 405.541c25.167 25.167 25.167 65.971 0 91.138s-65.971 25.167-91.138 0-25.167-65.971 0-91.138c25.166-25.167 65.97-25.167 91.138 0\"/></svg>\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right className={styles[\"dropdown-custom\"]}>\r\n                        <DropdownItem onClick={refreshLocation}>\r\n                          Refresh Weather\r\n                          <span className={styles[\"btn-right\"]}>\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M493.815 70.629c-11.001-1.003-20.73 7.102-21.733 18.102l-2.65 29.069C424.473 47.194 346.429 0 256 0 158.719 0 72.988 55.522 30.43 138.854c-5.024 9.837-1.122 21.884 8.715 26.908 9.839 5.024 21.884 1.123 26.908-8.715C102.07 86.523 174.397 40 256 40c74.377 0 141.499 38.731 179.953 99.408l-28.517-20.367c-8.989-6.419-21.48-4.337-27.899 4.651-6.419 8.989-4.337 21.479 4.651 27.899l86.475 61.761c12.674 9.035 30.155.764 31.541-14.459l9.711-106.53c1.004-11.001-7.1-20.731-18.1-21.734zM472.855 346.238c-9.838-5.023-21.884-1.122-26.908 8.715C409.93 425.477 337.603 472 256 472c-74.377 0-141.499-38.731-179.953-99.408l28.517 20.367c8.989 6.419 21.479 4.337 27.899-4.651 6.419-8.989 4.337-21.479-4.651-27.899l-86.475-61.761c-12.519-8.944-30.141-.921-31.541 14.459L.085 419.637c-1.003 11 7.102 20.73 18.101 21.733 11.014 1.001 20.731-7.112 21.733-18.102l2.65-29.069C87.527 464.806 165.571 512 256 512c97.281 0 183.012-55.522 225.57-138.854 5.024-9.837 1.122-21.884-8.715-26.908z\"/></svg>\r\n                          </span>\r\n                        </DropdownItem>\r\n                        <DropdownItem onClick={useLocation}>\r\n                          Use My Location\r\n                          <span className={styles[\"btn-right\"]}>\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 51.636 51.636\"><path d=\"M51.353.914a.999.999 0 00-1.135-.213L.583 23.481a1 1 0 00.252 1.895l22.263 3.731 2.545 21.038a1.002 1.002 0 001.889.324l24-48.415a1 1 0 00-.179-1.14z\"/></svg>\r\n                          </span>\r\n                        </DropdownItem>\r\n                        {searchHistory != null && (\r\n                          <>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem header>Search History </DropdownItem>\r\n                            {searchHistory.map((item, index) => {\r\n                              return (\r\n                                <DropdownItem key={index}>\r\n                                  <span\r\n                                    onClick={() => {\r\n                                      useSpecificHistory(index);\r\n                                    }}>\r\n                                    {item.city}, {item.region}\r\n                                  </span>\r\n\r\n                                  <span\r\n                                    className={[styles[\"btn-remove\"], styles[\"btn-right\"]].join(\r\n                                      \" \"\r\n                                    )}\r\n                                    onClick={() => {\r\n                                      deleteSpecificHistory(index);\r\n                                    }}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512.001 512.001\"><path d=\"M284.286 256.002L506.143 34.144c7.811-7.811 7.811-20.475 0-28.285-7.811-7.81-20.475-7.811-28.285 0L256 227.717 34.143 5.859c-7.811-7.811-20.475-7.811-28.285 0-7.81 7.811-7.811 20.475 0 28.285l221.857 221.857L5.858 477.859c-7.811 7.811-7.811 20.475 0 28.285a19.938 19.938 0 0014.143 5.857 19.94 19.94 0 0014.143-5.857L256 284.287l221.857 221.857c3.905 3.905 9.024 5.857 14.143 5.857s10.237-1.952 14.143-5.857c7.811-7.811 7.811-20.475 0-28.285L284.286 256.002z\"/></svg>\r\n                                  </span>\r\n                                </DropdownItem>\r\n                              );\r\n                            })}\r\n                            <DropdownItem divider />\r\n                            <DropdownItem\r\n                              className={styles[\"btn-last\"]}\r\n                              onClick={() => {\r\n                                clearAllHistory();\r\n                              }}>\r\n                              Clear Search History\r\n                            </DropdownItem>\r\n                          </>\r\n                        )}\r\n                      </DropdownMenu>\r\n                    </InputGroupButtonDropdown>\r\n                  </InputGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default header;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,YAA/C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,YAArC,QAAyD,oBAAzD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SACEC,wBADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,UALF,QAMO,YANP;;AAQA,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACtB,MAAM;IAAA,GAACC,MAAD;IAAA,GAASC;EAAT,IAAsBnB,QAAQ,CAAC;IACnCoB,OAAO,EAAE;EAD0B,CAAD,CAApC;EAGA,MAAM;IAAA,GAACC,YAAD;IAAA,GAAeC;EAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;EAEA,MAAMuB,OAAO,GAAGnB,aAAa,CAACoB,KAAK,IAAIA,KAAK,CAACD,OAAN,CAAcE,WAAxB,CAA7B;EAEA,MAAMC,UAAU,GAAGvB,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACC,OAAR,CAAgBF,UAA5B,CAAlC;EACA,MAAMG,UAAU,GAAG1B,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACJ,OAAR,CAAgBO,cAA5B,CAAlC;EACA,MAAMC,WAAW,GAAG5B,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACK,QAAR,CAAiBC,mBAA7B,CAAnC;EACA,MAAMC,YAAY,GAAG/B,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACK,QAAR,CAAiBG,oBAA7B,CAApC;EACA,MAAMC,OAAO,GAAGjC,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACK,QAAR,CAAiBK,eAA7B,CAA/B;EACA,MAAMC,SAAS,GAAGnC,eAAe,CAACwB,OAAO,IAAIA,OAAO,CAACK,QAAR,CAAiBO,iBAA7B,CAAjC;EAEA,MAAMC,QAAQ,GAAGpC,aAAa,CAACoB,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAeS,gBAAzB,CAA9B;EACA,MAAMC,SAAS,GAAGtC,aAAa,CAACoB,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAeW,iBAAzB,CAA/B;EAEA,IAAIC,YAAY,GAAG,IAAnB;EACA,IAAIC,aAAa,GAAG,IAApB;;EACA,WAAmC;IACjCD,YAAY,GAAGE,YAAY,CAACC,OAAb,CAAqB,gBAArB,IACXC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CADW,GAEX,EAFJ;IAGAF,aAAa,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAhB;;IACA,IAAIF,aAAa,KAAKK,SAAtB,EAAiC;MAC/B,MAAMC,IAAI,GAAG,CAAC,MAAD,EAAS,QAAT,CAAb;MAAA,MACEC,QAAQ,GAAGP,aAAa,CAACQ,MAAd,CACT,CAACC,CAAC,IAAIC,CAAC,IAAI,CAACC,CAAC,IAAI,CAACF,CAAC,CAACG,GAAF,CAAMD,CAAN,CAAD,IAAaF,CAAC,CAACI,GAAF,CAAMF,CAAN,CAAnB,EAA6BL,IAAI,CAACQ,GAAL,CAASH,CAAC,IAAID,CAAC,CAACC,CAAD,CAAf,EAAoBI,IAApB,CAAyB,GAAzB,CAA7B,CAAX,EAAwE,IAAIC,GAAJ,EAAxE,CADS,CADb;MAIAf,YAAY,CAACgB,OAAb,CAAqB,gBAArB,EAAuCd,IAAI,CAACe,SAAL,CAAeX,QAAf,CAAvC;IACD;EACF;;EAED,MAAMY,eAAe,GAAG,MAAM;IAC5BlB,YAAY,CAACmB,UAAb,CAAwB,gBAAxB;EACD,CAFD;;EAIA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;IACrC,IAAIC,UAAU,GAAG,CAAC,GAAGvB,aAAJ,CAAjB;IACAuB,UAAU,CAACC,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;IACArB,YAAY,CAACgB,OAAb,CAAqB,gBAArB,EAAuCd,IAAI,CAACe,SAAL,CAAeK,UAAf,CAAvC;;IACA,IAAIA,UAAU,KAAKlB,SAAf,IAA4BkB,UAAU,CAACE,MAAX,IAAqB,CAArD,EAAwD;MACtDxB,YAAY,CAACmB,UAAb,CAAwB,gBAAxB;IACD;EACF,CAPD;;EASA,MAAMM,kBAAkB,GAAGJ,KAAK,IAAI;IAClC,IAAIC,UAAU,GAAG,CAAC,GAAGvB,aAAJ,CAAjB;IACAnB,UAAU,CAAC,IAAD,CAAV;IACAU,OAAO,CAACgC,UAAU,CAACD,KAAD,CAAV,CAAkBK,IAAnB,CAAP;IACAlC,SAAS,CAAC8B,UAAU,CAACD,KAAD,CAAV,CAAkBM,MAAnB,CAAT;IACAhE,YAAY,CAAC2D,UAAU,CAACD,KAAD,CAAV,CAAkBO,GAAnB,EAAwBN,UAAU,CAACD,KAAD,CAAV,CAAkBQ,GAA1C,CAAZ,CAA2DC,IAA3D,CAAgEC,OAAO,IAAI;MACzEhD,UAAU,CAACgD,OAAD,CAAV;MACAnD,UAAU,CAAC,KAAD,CAAV;IACD,CAHD;EAID,CATD;;EAWA,MAAMoD,kBAAkB,GAAG1D,OAAO,IAAI;IACpCD,SAAS,CAAC;MAAEC;IAAF,CAAD,CAAT;EACD,CAFD;;EAGA,MAAM2D,kBAAkB,GAAG3D,OAAO,IAAI;IACpCM,UAAU,CAAC,IAAD,CAAV;IACAxB,gBAAgB,CAACkB,OAAD,CAAhB,CACGwD,IADH,CACQC,OAAO,IAAIA,OAAO,CAAC,CAAD,CAD1B,EAEGD,IAFH,CAEQI,IAAI,IAAI;MACZ,MAAMC,WAAW,GAAGD,IAAI,CAACE,kBAAzB;MACA,MAAMR,GAAG,GAAGM,IAAI,CAACG,QAAL,CAAcnD,QAAd,CAAuB0C,GAAvB,EAAZ;MACA,MAAMC,GAAG,GAAGK,IAAI,CAACG,QAAL,CAAcnD,QAAd,CAAuB2C,GAAvB,EAAZ;MACA,IAAIH,IAAI,GAAG,IAAX;MACA,IAAIC,MAAM,GAAG,IAAb;MACA1C,WAAW,CAAC2C,GAAD,CAAX;MACAxC,YAAY,CAACyC,GAAD,CAAZ;MACAxD,SAAS,CAAC;QAAEC,OAAO,EAAE;MAAX,CAAD,CAAT;;MACA,KAAK,IAAIgE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACX,MAAhC,EAAwCc,CAAC,EAAzC,EAA6C;QAC3C,IAAIC,UAAU,GAAGJ,WAAW,CAACG,CAAD,CAA5B;;QACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,KAAX,CAAiBjB,MAArC,EAA6CgB,CAAC,EAA9C,EAAkD;UAChD,IAAID,UAAU,CAACE,KAAX,CAAiBD,CAAjB,MAAwB,UAA5B,EAAwC;YACtClD,OAAO,CAACiD,UAAU,CAACG,SAAZ,CAAP;YACAhB,IAAI,GAAGa,UAAU,CAACG,SAAlB;UACD;;UACD,IAAIH,UAAU,CAACE,KAAX,CAAiBD,CAAjB,MAAwB,6BAA5B,EAA2D;YACzDhD,SAAS,CAAC+C,UAAU,CAACI,UAAZ,CAAT;YACAhB,MAAM,GAAGY,UAAU,CAACI,UAApB;UACD;QACF;MACF;;MACD7C,YAAY,CAAC8C,IAAb,CAAkB;QAAElB,IAAI,EAAEA,IAAR;QAAcC,MAAM,EAAEA,MAAtB;QAA8BC,GAAG,EAAEA,GAAnC;QAAwCC,GAAG,EAAEA;MAA7C,CAAlB;MACA7B,YAAY,CAACgB,OAAb,CAAqB,gBAArB,EAAuCd,IAAI,CAACe,SAAL,CAAenB,YAAf,CAAvC;MACAnC,YAAY,CAACiE,GAAD,EAAMC,GAAN,CAAZ,CAAuBC,IAAvB,CAA4BC,OAAO,IAAI;QACrChD,UAAU,CAACgD,OAAD,CAAV;QACAnD,UAAU,CAAC,KAAD,CAAV;MACD,CAHD;IAID,CA9BH,EA+BGiE,KA/BH,CA+BSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CA/BlB;EAgCD,CAlCD;;EAoCA,MAAME,cAAc,GAAG,MAAMxE,eAAe,CAAC,CAACD,YAAF,CAA5C;;EAEA,MAAM0E,eAAe,GAAG,MAAM;IAC5BrE,UAAU,CAAC,IAAD,CAAV;IACAsE,MAAM,CAAC,yBAAD,CAAN;IACAvF,YAAY,CAAC+B,QAAD,EAAWE,SAAX,CAAZ,CAAkCkC,IAAlC,CAAuCC,OAAO,IAAI;MAChDhD,UAAU,CAACgD,OAAD,CAAV;MACAnD,UAAU,CAAC,KAAD,CAAV;MACAhB,KAAK,CAACuF,OAAN,CAAcC,OAAd;IACD,CAJD;EAKD,CARD;;EAUA,SAASC,kBAAT,CAA4BzB,GAA5B,EAAiCC,GAAjC,EAAsC;IACpCnE,aAAa,CAACkE,GAAD,EAAMC,GAAN,CAAb,CAAwBC,IAAxB,CAA6BC,OAAO,IAAI;MACtC,MAAMuB,IAAI,GAAGvB,OAAO,CAACwB,QAAR,CAAiB,CAAjB,EAAoBC,UAApB,CAA+BlF,OAA5C;;MACA,IAAIgF,IAAI,CAAC5E,KAAT,EAAgB;QACd,IAAI+E,SAAS,GAAGjG,aAAa,CAAC8F,IAAI,CAAC5E,KAAN,CAA7B;QACAc,SAAS,CAACiE,SAAD,CAAT;MACD,CAHD,MAGO,IAAIH,IAAI,CAACI,OAAT,EAAkB;QACvBlE,SAAS,CAAC8D,IAAI,CAACI,OAAN,CAAT;MACD;;MACD,IAAIJ,IAAI,CAACK,QAAT,EAAmB;QACjBrE,OAAO,CAACgE,IAAI,CAACK,QAAN,CAAP;MACD,CAFD,MAEO,IAAIL,IAAI,CAACM,IAAT,EAAe;QACpBtE,OAAO,CAACgE,IAAI,CAACM,IAAN,CAAP;MACD,CAFM,MAEA,IAAIN,IAAI,CAAC5B,IAAT,EAAe;QACpBpC,OAAO,CAACgE,IAAI,CAAC5B,IAAN,CAAP;MACD,CAFM,MAEA,IAAI4B,IAAI,CAACO,MAAT,EAAiB;QACtBvE,OAAO,CAACgE,IAAI,CAACO,MAAN,CAAP;MACD;IACF,CAjBD;IAkBAlG,YAAY,CAACiE,GAAD,EAAMC,GAAN,CAAZ,CAAuBC,IAAvB,CAA4BC,OAAO,IAAI;MACrChD,UAAU,CAACgD,OAAD,CAAV;MACAnD,UAAU,CAAC,KAAD,CAAV;MACAhB,KAAK,CAACuF,OAAN,CAAcC,OAAd;IACD,CAJD;EAKD;;EAED,IAAIA,OAAO,GAAG,IAAd;;EAEA,MAAMF,MAAM,GAAGhB,IAAI,IAAKkB,OAAO,GAAGxF,KAAK,CAACkG,IAAN,CAAW5B,IAAX,EAAiB;IAAE6B,SAAS,EAAE;EAAb,CAAjB,CAAlC;;EACA,MAAMC,MAAM,GAAG9B,IAAI,IACjBtE,KAAK,CAACoG,MAAN,CAAaZ,OAAb,EAAsB;IAAEa,MAAM,EAAE/B,IAAV;IAAgBgC,IAAI,EAAEtG,KAAK,CAACuG,IAAN,CAAWC,OAAjC;IAA0CL,SAAS,EAAE;EAArD,CAAtB,CADF;;EAGA,MAAMM,WAAW,GAAG,MAAM;IACxBzF,UAAU,CAAC,IAAD,CAAV;IACAJ,eAAe,CAAC,CAACD,YAAF,CAAf;IACA2E,MAAM,CAAC,qCAAD,CAAN;IACAzF,WAAW,GACRqE,IADH,CACQC,OAAO,IAAI;MACf,MAAMH,GAAG,GAAGG,OAAO,CAACuC,MAAR,CAAe5E,QAA3B;MACA,MAAMmC,GAAG,GAAGE,OAAO,CAACuC,MAAR,CAAe1E,SAA3B;MACAX,WAAW,CAAC2C,GAAD,CAAX;MACAxC,YAAY,CAACyC,GAAD,CAAZ;MACAwB,kBAAkB,CAACzB,GAAD,EAAMC,GAAN,CAAlB;IACD,CAPH,EAQGgB,KARH,CAQSC,KAAK,IAAI;MACdlE,UAAU,CAAC,KAAD,CAAV;MACAhB,KAAK,CAACoG,MAAN,CAAaZ,OAAb,EAAsB;QACpBa,MAAM,EAAG,UAASnB,KAAK,CAACyB,OAAQ,EADZ;QAEpBL,IAAI,EAAEtG,KAAK,CAACuG,IAAN,CAAWK,KAFG;QAGpBT,SAAS,EAAE;MAHS,CAAtB;IAKD,CAfH;EAgBD,CApBD;;EAsBA,OACE,4BACGtF,OAAO,IACN;IAAQ,SAAS,EAAEtB,MAAM,CAAC,QAAD;EAAzB,GACE;IAAK,SAAS,EAAC;EAAf,GACE;IAAK,SAAS,EAAC;EAAf,GACE;IAAK,SAAS,EAAC;EAAf,GACE;IAAK,SAAS,EAAEA,MAAM,CAACsH;EAAvB,GACE,MAAC,UAAD,QACE,MAAC,MAAD;IACE,OAAO,EAAErG,MAAM,CAACE,OADlB;IAEE,OAAO,EAAE0D,kBAFX;IAGE,QAAQ,EAAEC;EAHZ,EADF,EAME,MAAC,wBAAD;IACE,SAAS,EAAC,QADZ;IAEE,MAAM,EAAE1D,YAFV;IAGE,MAAM,EAAEyE;EAHV,GAIE,MAAC,cAAD;IAAgB,SAAS,EAAE7F,MAAM,CAAC,UAAD;EAAjC,GACA;IAAK,MAAM,EAAC,KAAZ;IAAkB,OAAO,EAAC,qBAA1B;IAAgD,KAAK,EAAC,KAAtD;IAA4D,KAAK,EAAC;EAAlE,GAA+F;IAAM,CAAC,EAAC;EAAR,EAA/F,CADA,CAJF,EAOE,MAAC,YAAD;IAAc,KAAK,MAAnB;IAAoB,SAAS,EAAEA,MAAM,CAAC,iBAAD;EAArC,GACE,MAAC,YAAD;IAAc,OAAO,EAAE8F;EAAvB,sBAEE;IAAM,SAAS,EAAE9F,MAAM,CAAC,WAAD;EAAvB,GACA;IAAK,KAAK,EAAC,4BAAX;IAAwC,OAAO,EAAC;EAAhD,GAA8D;IAAM,CAAC,EAAC;EAAR,EAA9D,CADA,CAFF,CADF,EAOE,MAAC,YAAD;IAAc,OAAO,EAAEkH;EAAvB,sBAEE;IAAM,SAAS,EAAElH,MAAM,CAAC,WAAD;EAAvB,GACA;IAAK,KAAK,EAAC,4BAAX;IAAwC,OAAO,EAAC;EAAhD,GAAoE;IAAM,CAAC,EAAC;EAAR,EAApE,CADA,CAFF,CAPF,EAaG4C,aAAa,IAAI,IAAjB,IACC,4BACE,MAAC,YAAD;IAAc,OAAO;EAArB,EADF,EAEE,MAAC,YAAD;IAAc,MAAM;EAApB,qBAFF,EAGGA,aAAa,CAACc,GAAd,CAAkB,CAAC6D,IAAD,EAAOrD,KAAP,KAAiB;IAClC,OACE,MAAC,YAAD;MAAc,GAAG,EAAEA;IAAnB,GACE;MACE,OAAO,EAAE,MAAM;QACbI,kBAAkB,CAACJ,KAAD,CAAlB;MACD;IAHH,GAIGqD,IAAI,CAAChD,IAJR,QAIgBgD,IAAI,CAAC/C,MAJrB,CADF,EAQE;MACE,SAAS,EAAE,CAACxE,MAAM,CAAC,YAAD,CAAP,EAAuBA,MAAM,CAAC,WAAD,CAA7B,EAA4C2D,IAA5C,CACT,GADS,CADb;MAIE,OAAO,EAAE,MAAM;QACbM,qBAAqB,CAACC,KAAD,CAArB;MACD;IANH,GAOE;MAAK,KAAK,EAAC,4BAAX;MAAwC,OAAO,EAAC;IAAhD,GAAsE;MAAM,CAAC,EAAC;IAAR,EAAtE,CAPF,CARF,CADF;EAoBD,CArBA,CAHH,EAyBE,MAAC,YAAD;IAAc,OAAO;EAArB,EAzBF,EA0BE,MAAC,YAAD;IACE,SAAS,EAAElE,MAAM,CAAC,UAAD,CADnB;IAEE,OAAO,EAAE,MAAM;MACb+D,eAAe;IAChB;EAJH,0BA1BF,CAdJ,CAPF,CANF,CADF,CADF,CADF,CADF,CADF,CAFJ,CADF;AAiFD,CApPD;;AAsPA,eAAehD,MAAf"},"metadata":{},"sourceType":"module"}