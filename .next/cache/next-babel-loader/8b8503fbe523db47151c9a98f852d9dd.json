{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = exports.looseToArray = void 0;\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _router = require(\"../next-server/lib/router/router\");\n\nvar _getAssetPathFromRoute = _interopRequireDefault(require(\"../next-server/lib/router/utils/get-asset-path-from-route\"));\n\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\n\nvar _parseRelativeUrl = require(\"../next-server/lib/router/utils/parse-relative-url\");\n\nvar looseToArray = function looseToArray(input) {\n  return [].slice.call(input);\n};\n\nexports.looseToArray = looseToArray;\n\nfunction getInitialStylesheets() {\n  return looseToArray(document.styleSheets).filter(function (el) {\n    return el.ownerNode && el.ownerNode.tagName === 'LINK' && el.ownerNode.hasAttribute('data-n-p');\n  }).map(function (sheet) {\n    return {\n      href: sheet.ownerNode.getAttribute('href'),\n      text: looseToArray(sheet.cssRules).map(function (r) {\n        return r.cssText;\n      }).join('')\n    };\n  });\n}\n\nfunction hasRel(rel, link) {\n  try {\n    link = document.createElement('link');\n    return link.relList.supports(rel);\n  } catch (_unused) {}\n}\n\nfunction pageLoadError(route) {\n  return (0, _router.markLoadingError)(new Error(\"Error loading \".concat(route)));\n}\n\nvar relPrefetch = hasRel('preload') && !hasRel('prefetch') ? // https://caniuse.com/#feat=link-rel-preload\n// macOS and iOS (Safari does not support prefetch)\n'preload' : // https://caniuse.com/#feat=link-rel-prefetch\n// IE 11, Edge 12+, nearly all evergreen\n'prefetch';\nvar relPreload = hasRel('preload') ? 'preload' : relPrefetch;\nvar relPreloadStyle = 'fetch';\nvar hasNoModule = ('noModule' in document.createElement('script'));\n\nfunction normalizeRoute(route) {\n  if (route[0] !== '/') {\n    throw new Error(\"Route name should start with a \\\"/\\\", got \\\"\".concat(route, \"\\\"\"));\n  }\n\n  if (route === '/') return route;\n  return route.replace(/\\/$/, '');\n}\n\nfunction appendLink(href, rel, as, link) {\n  return new Promise(function (res, rej) {\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = rel;\n    link.crossOrigin = process.env.__NEXT_CROSS_ORIGIN;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nfunction loadScript(url) {\n  return new Promise(function (res, rej) {\n    var script = document.createElement('script');\n\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module';\n    }\n\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN;\n    script.src = url;\n    script.onload = res;\n\n    script.onerror = function () {\n      return rej(pageLoadError(url));\n    };\n\n    document.body.appendChild(script);\n  });\n}\n\nvar PageLoader = /*#__PURE__*/function () {\n  function PageLoader(buildId, assetPrefix, initialPage) {\n    _classCallCheck(this, PageLoader);\n\n    this.initialPage = void 0;\n    this.buildId = void 0;\n    this.assetPrefix = void 0;\n    this.pageCache = void 0;\n    this.pageRegisterEvents = void 0;\n    this.loadingRoutes = void 0;\n    this.promisedBuildManifest = void 0;\n    this.promisedSsgManifest = void 0;\n    this.promisedDevPagesManifest = void 0;\n    this.initialPage = initialPage;\n    this.buildId = buildId;\n    this.assetPrefix = assetPrefix;\n    this.pageCache = {};\n    this.pageRegisterEvents = (0, _mitt[\"default\"])();\n    this.loadingRoutes = {\n      // By default these 2 pages are being loaded in the initial html\n      '/_app': true\n    }; // TODO: get rid of this limitation for rendering the error page\n\n    if (initialPage !== '/_error') {\n      this.loadingRoutes[initialPage] = true;\n    }\n\n    this.promisedBuildManifest = new Promise(function (resolve) {\n      if (window.__BUILD_MANIFEST) {\n        resolve(window.__BUILD_MANIFEST);\n      } else {\n        ;\n\n        window.__BUILD_MANIFEST_CB = function () {\n          resolve(window.__BUILD_MANIFEST);\n        };\n      }\n    });\n    /** @type {Promise<Set<string>>} */\n\n    this.promisedSsgManifest = new Promise(function (resolve) {\n      if (window.__SSG_MANIFEST) {\n        resolve(window.__SSG_MANIFEST);\n      } else {\n        ;\n\n        window.__SSG_MANIFEST_CB = function () {\n          resolve(window.__SSG_MANIFEST);\n        };\n      }\n    });\n  }\n\n  _createClass(PageLoader, [{\n    key: \"getPageList\",\n    value: function getPageList() {\n      if (false) {\n        return this.promisedBuildManifest.then(function (buildManifest) {\n          return buildManifest.sortedPages;\n        });\n      } else {\n        if (window.__DEV_PAGES_MANIFEST) {\n          return window.__DEV_PAGES_MANIFEST.pages;\n        } else {\n          if (!this.promisedDevPagesManifest) {\n            this.promisedDevPagesManifest = fetch(\"\".concat(this.assetPrefix, \"/_next/static/development/_devPagesManifest.json\")).then(function (res) {\n              return res.json();\n            }).then(function (manifest) {\n              ;\n              window.__DEV_PAGES_MANIFEST = manifest;\n              return manifest.pages;\n            })[\"catch\"](function (err) {\n              console.log(\"Failed to fetch devPagesManifest\", err);\n            });\n          }\n\n          return this.promisedDevPagesManifest;\n        }\n      }\n    } // Returns a promise for the dependencies for a particular route\n\n  }, {\n    key: \"getDependencies\",\n    value: function getDependencies(route) {\n      var _this = this;\n\n      return this.promisedBuildManifest.then(function (m) {\n        return m[route] ? m[route].map(function (url) {\n          return \"\".concat(_this.assetPrefix, \"/_next/\").concat(encodeURI(url));\n        }) : Promise.reject(pageLoadError(route));\n      });\n    }\n    /**\n    * @param {string} href the route href (file-system path)\n    * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n    */\n\n  }, {\n    key: \"getDataHref\",\n    value: function getDataHref(href, asPath, ssg, locale, defaultLocale) {\n      var _this2 = this;\n\n      var _ref = (0, _parseRelativeUrl.parseRelativeUrl)(href),\n          hrefPathname = _ref.pathname,\n          query = _ref.query,\n          search = _ref.search;\n\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(asPath),\n          asPathname = _ref2.pathname;\n\n      var route = normalizeRoute(hrefPathname);\n\n      var getHrefForSlug = function getHrefForSlug(path) {\n        var dataRoute = (0, _router.addLocale)((0, _getAssetPathFromRoute[\"default\"])(path, '.json'), locale, defaultLocale);\n        return (0, _router.addBasePath)(\"/_next/data/\".concat(_this2.buildId).concat(dataRoute).concat(ssg ? '' : search));\n      };\n\n      var isDynamic = (0, _isDynamic.isDynamicRoute)(route);\n      var interpolatedRoute = isDynamic ? (0, _router.interpolateAs)(hrefPathname, asPathname, query).result : '';\n      return isDynamic ? interpolatedRoute && getHrefForSlug(interpolatedRoute) : getHrefForSlug(route);\n    }\n    /**\n    * @param {string} href the route href (file-system path)\n    * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n    */\n\n  }, {\n    key: \"prefetchData\",\n    value: function prefetchData(href, asPath, locale, defaultLocale) {\n      var _this3 = this;\n\n      var _ref3 = (0, _parseRelativeUrl.parseRelativeUrl)(href),\n          hrefPathname = _ref3.pathname;\n\n      var route = normalizeRoute(hrefPathname);\n      return this.promisedSsgManifest.then(function (s, _dataHref) {\n        return (// Check if the route requires a data file\n          s.has(route) && ( // Try to generate data href, noop when falsy\n          _dataHref = _this3.getDataHref(href, asPath, true, locale, defaultLocale)) && // noop when data has already been prefetched (dedupe)\n          !document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(_dataHref, \"\\\"]\")) && // Inject the `<link rel=prefetch>` tag for above computed `href`.\n          appendLink(_dataHref, relPrefetch, 'fetch')[\"catch\"](function () {\n            /* ignore prefetch error */\n          })\n        );\n      });\n    }\n  }, {\n    key: \"loadPage\",\n    value: function loadPage(route) {\n      var _this4 = this;\n\n      route = normalizeRoute(route);\n      return new Promise(function (resolve, reject) {\n        // If there's a cached version of the page, let's use it.\n        var cachedPage = _this4.pageCache[route];\n\n        if (cachedPage) {\n          if ('error' in cachedPage) {\n            reject(cachedPage.error);\n          } else {\n            resolve(cachedPage);\n          }\n\n          return;\n        }\n\n        var fire = function fire(pageToCache) {\n          _this4.pageRegisterEvents.off(route, fire);\n\n          delete _this4.loadingRoutes[route];\n\n          if ('error' in pageToCache) {\n            reject(pageToCache.error);\n          } else {\n            resolve(pageToCache);\n          }\n        }; // Register a listener to get the page\n\n\n        _this4.pageRegisterEvents.on(route, fire);\n\n        if (!_this4.loadingRoutes[route]) {\n          _this4.loadingRoutes[route] = true;\n\n          if (false) {\n            _this4.getDependencies(route).then(function (deps) {\n              var pending = [];\n              deps.forEach(function (d) {\n                if (d.endsWith('.js') && !document.querySelector(\"script[src^=\\\"\".concat(d, \"\\\"]\"))) {\n                  pending.push(loadScript(d));\n                } // Prefetch CSS as it'll be needed when the page JavaScript\n                // evaluates. This will only trigger if explicit prefetching is\n                // disabled for a <Link>... prefetching in this case is desirable\n                // because we *know* it's going to be used very soon (page was\n                // loaded).\n\n\n                if (d.endsWith('.css') && !document.querySelector(\"link[rel=\\\"\".concat(relPreload, \"\\\"][href^=\\\"\").concat(d, \"\\\"]\"))) {\n                  // This is not pushed into `pending` because we don't need to\n                  // wait for these to resolve. To prevent an unhandled\n                  // rejection, we swallow the error which is handled later in\n                  // the rendering cycle (this is just a preload optimization).\n                  appendLink(d, relPreload, relPreloadStyle)[\"catch\"](function () {\n                    /* ignore preload error */\n                  });\n                }\n              });\n              return Promise.all(pending);\n            })[\"catch\"](function (err) {\n              // Mark the page as failed to load if any of its required scripts\n              // fail to load:\n              _this4.pageCache[route] = {\n                error: err\n              };\n              fire({\n                error: err\n              });\n            });\n          } else {\n            // Development only. In production the page file is part of the build manifest\n            route = normalizeRoute(route);\n            var scriptRoute = (0, _getAssetPathFromRoute[\"default\"])(route, '.js');\n            var url = \"\".concat(_this4.assetPrefix, \"/_next/static/chunks/pages\").concat(encodeURI(scriptRoute));\n            loadScript(url)[\"catch\"](function (err) {\n              // Mark the page as failed to load if its script fails to load:\n              _this4.pageCache[route] = {\n                error: err\n              };\n              fire({\n                error: err\n              });\n            });\n          }\n        }\n      });\n    } // This method if called by the route code.\n\n  }, {\n    key: \"registerPage\",\n    value: function registerPage(route, regFn) {\n      var _this5 = this;\n\n      var register = function register(styleSheets) {\n        try {\n          var mod = regFn();\n          var pageData = {\n            page: mod[\"default\"] || mod,\n            mod: mod,\n            styleSheets: styleSheets\n          };\n          _this5.pageCache[route] = pageData;\n\n          _this5.pageRegisterEvents.emit(route, pageData);\n        } catch (error) {\n          _this5.pageCache[route] = {\n            error: error\n          };\n\n          _this5.pageRegisterEvents.emit(route, {\n            error: error\n          });\n        }\n      };\n\n      if (true) {\n        // Wait for webpack to become idle if it's not.\n        // More info: https://github.com/vercel/next.js/pull/1511\n        if (module.hot && module.hot.status() !== 'idle') {\n          console.log(\"Waiting for webpack to become \\\"idle\\\" to initialize the page: \\\"\".concat(route, \"\\\"\"));\n\n          var check = function check(status) {\n            if (status === 'idle') {\n              ;\n              module.hot.removeStatusHandler(check);\n              register(\n              /* css is handled via style-loader in development */\n              []);\n            }\n          };\n\n          module.hot.status(check);\n          return;\n        }\n      }\n\n      function fetchStyleSheet(href) {\n        return fetch(href).then(function (res) {\n          if (!res.ok) throw pageLoadError(href);\n          return res.text().then(function (text) {\n            return {\n              href: href,\n              text: text\n            };\n          });\n        });\n      }\n\n      var isInitialLoad = route === this.initialPage;\n      var promisedDeps = // Shared styles will already be on the page:\n      route === '/_app' || // We use `style-loader` in development:\n      true ? Promise.resolve([]) : // Tests that this does not block hydration:\n      // test/integration/css-fixtures/hydrate-without-deps/\n      (isInitialLoad ? Promise.resolve(looseToArray(document.querySelectorAll('link[data-n-p]')).map(function (e) {\n        return e.getAttribute('href');\n      })) : this.getDependencies(route).then(function (deps) {\n        return deps.filter(function (d) {\n          return d.endsWith('.css');\n        });\n      })).then(function (cssFiles) {\n        return (// These files should've already been fetched by now, so this\n          // should resolve instantly.\n          Promise.all(cssFiles.map(function (d) {\n            return fetchStyleSheet(d);\n          }))[\"catch\"](function (err) {\n            if (isInitialLoad) return getInitialStylesheets();\n            throw err;\n          })\n        );\n      });\n      promisedDeps.then(function (deps) {\n        return register(deps);\n      }, function (error) {\n        _this5.pageCache[route] = {\n          error: error\n        };\n\n        _this5.pageRegisterEvents.emit(route, {\n          error: error\n        });\n      });\n    }\n    /**\n    * @param {string} route\n    * @param {boolean} [isDependency]\n    */\n\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(route, isDependency) {\n      var _this6 = this;\n\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      var cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n      /** @type {string} */\n\n\n      var url;\n\n      if (isDependency) {\n        url = route;\n      } else {\n        if (true) {\n          route = normalizeRoute(route);\n          var ext = process.env.__NEXT_MODERN_BUILD && hasNoModule ? '.module.js' : '.js';\n          var scriptRoute = (0, _getAssetPathFromRoute[\"default\"])(route, ext);\n          url = \"\".concat(this.assetPrefix, \"/_next/static/\").concat(encodeURIComponent(this.buildId), \"/pages\").concat(encodeURI(scriptRoute));\n        }\n      }\n\n      return Promise.all(document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(url, \"\\\"]\")) ? [] : [url && appendLink(url, relPrefetch, url.endsWith('.css') ? relPreloadStyle : 'script'), false && !isDependency && this.getDependencies(route).then(function (urls) {\n        return Promise.all(urls.map(function (dependencyUrl) {\n          return _this6.prefetch(dependencyUrl, true);\n        }));\n      })]).then( // do not return any data\n      function () {}, // swallow prefetch errors\n      function () {});\n    }\n  }]);\n\n  return PageLoader;\n}();\n\nexports[\"default\"] = PageLoader;","map":{"version":3,"sources":["../../client/page-loader.ts"],"names":["looseToArray","input","document","el","sheet","href","text","r","link","relPrefetch","hasRel","relPreload","relPreloadStyle","hasNoModule","route","process","script","rej","pageLoadError","PageLoader","initialPage","buildId","assetPrefix","pageCache","pageRegisterEvents","loadingRoutes","promisedBuildManifest","promisedSsgManifest","promisedDevPagesManifest","constructor","resolve","window","getPageList","buildManifest","fetch","res","manifest","err","console","m","url","encodeURI","Promise","getDataHref","pathname","normalizeRoute","getHrefForSlug","path","dataRoute","ssg","isDynamic","interpolatedRoute","prefetchData","s","_dataHref","appendLink","loadPage","cachedPage","reject","fire","pageToCache","deps","pending","d","loadScript","error","scriptRoute","registerPage","register","styleSheets","mod","regFn","pageData","page","module","check","status","isInitialLoad","promisedDeps","e","cssFiles","fetchStyleSheet","getInitialStylesheets","prefetch","cn","navigator","ext","encodeURIComponent","urls","dependencyUrl"],"mappings":"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","sourcesContent":["import { ComponentType } from 'react'\nimport type { ClientSsgManifest } from '../build'\nimport type { ClientBuildManifest } from '../build/webpack/plugins/build-manifest-plugin'\nimport mitt from '../next-server/lib/mitt'\nimport type { MittEmitter } from '../next-server/lib/mitt'\nimport {\n  addBasePath,\n  markLoadingError,\n  interpolateAs,\n  addLocale,\n} from '../next-server/lib/router/router'\n\nimport getAssetPathFromRoute from '../next-server/lib/router/utils/get-asset-path-from-route'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport { parseRelativeUrl } from '../next-server/lib/router/utils/parse-relative-url'\n\nexport const looseToArray = <T extends {}>(input: any): T[] =>\n  [].slice.call(input)\n\nfunction getInitialStylesheets(): StyleSheetTuple[] {\n  return looseToArray<CSSStyleSheet>(document.styleSheets)\n    .filter(\n      (el: CSSStyleSheet) =>\n        el.ownerNode &&\n        (el.ownerNode as Element).tagName === 'LINK' &&\n        (el.ownerNode as Element).hasAttribute('data-n-p')\n    )\n    .map((sheet) => ({\n      href: (sheet.ownerNode as Element).getAttribute('href')!,\n      text: looseToArray<CSSRule>(sheet.cssRules)\n        .map((r) => r.cssText)\n        .join(''),\n    }))\n}\n\nfunction hasRel(rel: string, link?: HTMLLinkElement) {\n  try {\n    link = document.createElement('link')\n    return link.relList.supports(rel)\n  } catch {}\n}\n\nfunction pageLoadError(route: string) {\n  return markLoadingError(new Error(`Error loading ${route}`))\n}\n\nconst relPrefetch =\n  hasRel('preload') && !hasRel('prefetch')\n    ? // https://caniuse.com/#feat=link-rel-preload\n      // macOS and iOS (Safari does not support prefetch)\n      'preload'\n    : // https://caniuse.com/#feat=link-rel-prefetch\n      // IE 11, Edge 12+, nearly all evergreen\n      'prefetch'\n\nconst relPreload = hasRel('preload') ? 'preload' : relPrefetch\nconst relPreloadStyle = 'fetch'\n\nconst hasNoModule = 'noModule' in document.createElement('script')\n\nfunction normalizeRoute(route: string) {\n  if (route[0] !== '/') {\n    throw new Error(`Route name should start with a \"/\", got \"${route}\"`)\n  }\n\n  if (route === '/') return route\n  return route.replace(/\\/$/, '')\n}\n\nfunction appendLink(\n  href: string,\n  rel: string,\n  as?: string,\n  link?: HTMLLinkElement\n): Promise<any> {\n  return new Promise((res, rej) => {\n    link = document.createElement('link')\n\n    // The order of property assignment here is intentional:\n    if (as) link!.as = as\n    link!.rel = rel\n    link!.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    link!.onload = res\n    link!.onerror = rej\n\n    // `href` should always be last:\n    link!.href = href\n\n    document.head.appendChild(link)\n  })\n}\n\nfunction loadScript(url: string): Promise<any> {\n  return new Promise((res, rej) => {\n    const script = document.createElement('script')\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module'\n    }\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    script.src = url\n    script.onload = res\n    script.onerror = () => rej(pageLoadError(url))\n    document.body.appendChild(script)\n  })\n}\n\nexport type StyleSheetTuple = { href: string; text: string }\nexport type GoodPageCache = {\n  page: ComponentType\n  mod: any\n  styleSheets: StyleSheetTuple[]\n}\nexport type PageCacheEntry = { error: any } | GoodPageCache\n\nexport default class PageLoader {\n  private initialPage: string\n  private buildId: string\n  private assetPrefix: string\n  private pageCache: Record<string, PageCacheEntry>\n  private pageRegisterEvents: MittEmitter\n  private loadingRoutes: Record<string, boolean>\n  private promisedBuildManifest?: Promise<ClientBuildManifest>\n  private promisedSsgManifest?: Promise<ClientSsgManifest>\n  private promisedDevPagesManifest?: Promise<any>\n\n  constructor(buildId: string, assetPrefix: string, initialPage: string) {\n    this.initialPage = initialPage\n\n    this.buildId = buildId\n    this.assetPrefix = assetPrefix\n\n    this.pageCache = {}\n    this.pageRegisterEvents = mitt()\n    this.loadingRoutes = {\n      // By default these 2 pages are being loaded in the initial html\n      '/_app': true,\n    }\n\n    // TODO: get rid of this limitation for rendering the error page\n    if (initialPage !== '/_error') {\n      this.loadingRoutes[initialPage] = true\n    }\n\n    this.promisedBuildManifest = new Promise((resolve) => {\n      if ((window as any).__BUILD_MANIFEST) {\n        resolve((window as any).__BUILD_MANIFEST)\n      } else {\n        ;(window as any).__BUILD_MANIFEST_CB = () => {\n          resolve((window as any).__BUILD_MANIFEST)\n        }\n      }\n    })\n\n    /** @type {Promise<Set<string>>} */\n    this.promisedSsgManifest = new Promise((resolve) => {\n      if ((window as any).__SSG_MANIFEST) {\n        resolve((window as any).__SSG_MANIFEST)\n      } else {\n        ;(window as any).__SSG_MANIFEST_CB = () => {\n          resolve((window as any).__SSG_MANIFEST)\n        }\n      }\n    })\n  }\n\n  getPageList() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.promisedBuildManifest!.then(\n        (buildManifest) => buildManifest.sortedPages\n      )\n    } else {\n      if ((window as any).__DEV_PAGES_MANIFEST) {\n        return (window as any).__DEV_PAGES_MANIFEST.pages\n      } else {\n        if (!this.promisedDevPagesManifest) {\n          this.promisedDevPagesManifest = fetch(\n            `${this.assetPrefix}/_next/static/development/_devPagesManifest.json`\n          )\n            .then((res) => res.json())\n            .then((manifest) => {\n              ;(window as any).__DEV_PAGES_MANIFEST = manifest\n              return manifest.pages\n            })\n            .catch((err) => {\n              console.log(`Failed to fetch devPagesManifest`, err)\n            })\n        }\n        return this.promisedDevPagesManifest\n      }\n    }\n  }\n\n  // Returns a promise for the dependencies for a particular route\n  private getDependencies(route: string): Promise<string[]> {\n    return this.promisedBuildManifest!.then((m) => {\n      return m[route]\n        ? m[route].map((url) => `${this.assetPrefix}/_next/${encodeURI(url)}`)\n        : Promise.reject(pageLoadError(route))\n    })\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  getDataHref(\n    href: string,\n    asPath: string,\n    ssg: boolean,\n    locale?: string,\n    defaultLocale?: string\n  ) {\n    const { pathname: hrefPathname, query, search } = parseRelativeUrl(href)\n    const { pathname: asPathname } = parseRelativeUrl(asPath)\n    const route = normalizeRoute(hrefPathname)\n\n    const getHrefForSlug = (path: string) => {\n      const dataRoute = addLocale(\n        getAssetPathFromRoute(path, '.json'),\n        locale,\n        defaultLocale\n      )\n      return addBasePath(\n        `/_next/data/${this.buildId}${dataRoute}${ssg ? '' : search}`\n      )\n    }\n\n    const isDynamic: boolean = isDynamicRoute(route)\n    const interpolatedRoute = isDynamic\n      ? interpolateAs(hrefPathname, asPathname, query).result\n      : ''\n\n    return isDynamic\n      ? interpolatedRoute && getHrefForSlug(interpolatedRoute)\n      : getHrefForSlug(route)\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  prefetchData(\n    href: string,\n    asPath: string,\n    locale?: string,\n    defaultLocale?: string\n  ) {\n    const { pathname: hrefPathname } = parseRelativeUrl(href)\n    const route = normalizeRoute(hrefPathname)\n    return this.promisedSsgManifest!.then(\n      (s: ClientSsgManifest, _dataHref?: string) =>\n        // Check if the route requires a data file\n        s.has(route) &&\n        // Try to generate data href, noop when falsy\n        (_dataHref = this.getDataHref(\n          href,\n          asPath,\n          true,\n          locale,\n          defaultLocale\n        )) &&\n        // noop when data has already been prefetched (dedupe)\n        !document.querySelector(\n          `link[rel=\"${relPrefetch}\"][href^=\"${_dataHref}\"]`\n        ) &&\n        // Inject the `<link rel=prefetch>` tag for above computed `href`.\n        appendLink(_dataHref, relPrefetch, 'fetch').catch(() => {\n          /* ignore prefetch error */\n        })\n    )\n  }\n\n  loadPage(route: string): Promise<GoodPageCache> {\n    route = normalizeRoute(route)\n\n    return new Promise<GoodPageCache>((resolve, reject) => {\n      // If there's a cached version of the page, let's use it.\n      const cachedPage = this.pageCache[route]\n      if (cachedPage) {\n        if ('error' in cachedPage) {\n          reject(cachedPage.error)\n        } else {\n          resolve(cachedPage)\n        }\n        return\n      }\n\n      const fire = (pageToCache: PageCacheEntry) => {\n        this.pageRegisterEvents.off(route, fire)\n        delete this.loadingRoutes[route]\n\n        if ('error' in pageToCache) {\n          reject(pageToCache.error)\n        } else {\n          resolve(pageToCache)\n        }\n      }\n\n      // Register a listener to get the page\n      this.pageRegisterEvents.on(route, fire)\n\n      if (!this.loadingRoutes[route]) {\n        this.loadingRoutes[route] = true\n        if (process.env.NODE_ENV === 'production') {\n          this.getDependencies(route)\n            .then((deps) => {\n              const pending: Promise<any>[] = []\n              deps.forEach((d) => {\n                if (\n                  d.endsWith('.js') &&\n                  !document.querySelector(`script[src^=\"${d}\"]`)\n                ) {\n                  pending.push(loadScript(d))\n                }\n\n                // Prefetch CSS as it'll be needed when the page JavaScript\n                // evaluates. This will only trigger if explicit prefetching is\n                // disabled for a <Link>... prefetching in this case is desirable\n                // because we *know* it's going to be used very soon (page was\n                // loaded).\n                if (\n                  d.endsWith('.css') &&\n                  !document.querySelector(\n                    `link[rel=\"${relPreload}\"][href^=\"${d}\"]`\n                  )\n                ) {\n                  // This is not pushed into `pending` because we don't need to\n                  // wait for these to resolve. To prevent an unhandled\n                  // rejection, we swallow the error which is handled later in\n                  // the rendering cycle (this is just a preload optimization).\n                  appendLink(d, relPreload, relPreloadStyle).catch(() => {\n                    /* ignore preload error */\n                  })\n                }\n              })\n              return Promise.all(pending)\n            })\n            .catch((err) => {\n              // Mark the page as failed to load if any of its required scripts\n              // fail to load:\n              this.pageCache[route] = { error: err }\n              fire({ error: err })\n            })\n        } else {\n          // Development only. In production the page file is part of the build manifest\n          route = normalizeRoute(route)\n          let scriptRoute = getAssetPathFromRoute(route, '.js')\n\n          const url = `${this.assetPrefix}/_next/static/chunks/pages${encodeURI(\n            scriptRoute\n          )}`\n          loadScript(url).catch((err) => {\n            // Mark the page as failed to load if its script fails to load:\n            this.pageCache[route] = { error: err }\n            fire({ error: err })\n          })\n        }\n      }\n    })\n  }\n\n  // This method if called by the route code.\n  registerPage(route: string, regFn: () => any) {\n    const register = (styleSheets: StyleSheetTuple[]) => {\n      try {\n        const mod = regFn()\n        const pageData: PageCacheEntry = {\n          page: mod.default || mod,\n          mod,\n          styleSheets,\n        }\n        this.pageCache[route] = pageData\n        this.pageRegisterEvents.emit(route, pageData)\n      } catch (error) {\n        this.pageCache[route] = { error }\n        this.pageRegisterEvents.emit(route, { error })\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Wait for webpack to become idle if it's not.\n      // More info: https://github.com/vercel/next.js/pull/1511\n      if ((module as any).hot && (module as any).hot.status() !== 'idle') {\n        console.log(\n          `Waiting for webpack to become \"idle\" to initialize the page: \"${route}\"`\n        )\n\n        const check = (status: string) => {\n          if (status === 'idle') {\n            ;(module as any).hot.removeStatusHandler(check)\n            register(\n              /* css is handled via style-loader in development */\n              []\n            )\n          }\n        }\n        ;(module as any).hot.status(check)\n        return\n      }\n    }\n\n    function fetchStyleSheet(href: string): Promise<StyleSheetTuple> {\n      return fetch(href).then((res) => {\n        if (!res.ok) throw pageLoadError(href)\n        return res.text().then((text) => ({ href, text }))\n      })\n    }\n\n    const isInitialLoad = route === this.initialPage\n    const promisedDeps: Promise<StyleSheetTuple[]> =\n      // Shared styles will already be on the page:\n      route === '/_app' ||\n      // We use `style-loader` in development:\n      process.env.NODE_ENV !== 'production'\n        ? Promise.resolve([])\n        : // Tests that this does not block hydration:\n          // test/integration/css-fixtures/hydrate-without-deps/\n          (isInitialLoad\n            ? Promise.resolve(\n                looseToArray<HTMLLinkElement>(\n                  document.querySelectorAll('link[data-n-p]')\n                ).map((e) => e.getAttribute('href')!)\n              )\n            : this.getDependencies(route).then((deps) =>\n                deps.filter((d) => d.endsWith('.css'))\n              )\n          ).then((cssFiles) =>\n            // These files should've already been fetched by now, so this\n            // should resolve instantly.\n            Promise.all(cssFiles.map((d) => fetchStyleSheet(d))).catch(\n              (err) => {\n                if (isInitialLoad) return getInitialStylesheets()\n                throw err\n              }\n            )\n          )\n    promisedDeps.then(\n      (deps) => register(deps),\n      (error) => {\n        this.pageCache[route] = { error }\n        this.pageRegisterEvents.emit(route, { error })\n      }\n    )\n  }\n\n  /**\n   * @param {string} route\n   * @param {boolean} [isDependency]\n   */\n  prefetch(route: string, isDependency?: boolean): Promise<void> {\n    // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n    // License: Apache 2.0\n    let cn\n    if ((cn = (navigator as any).connection)) {\n      // Don't prefetch if using 2G or if Save-Data is enabled.\n      if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n    }\n\n    /** @type {string} */\n    let url\n    if (isDependency) {\n      url = route\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        route = normalizeRoute(route)\n\n        const ext =\n          process.env.__NEXT_MODERN_BUILD && hasNoModule ? '.module.js' : '.js'\n        const scriptRoute = getAssetPathFromRoute(route, ext)\n\n        url = `${this.assetPrefix}/_next/static/${encodeURIComponent(\n          this.buildId\n        )}/pages${encodeURI(scriptRoute)}`\n      }\n    }\n\n    return Promise.all(\n      document.querySelector(`link[rel=\"${relPrefetch}\"][href^=\"${url}\"]`)\n        ? []\n        : [\n            url &&\n              appendLink(\n                url,\n                relPrefetch,\n                url.endsWith('.css') ? relPreloadStyle : 'script'\n              ),\n            process.env.NODE_ENV === 'production' &&\n              !isDependency &&\n              this.getDependencies(route).then((urls) =>\n                Promise.all(\n                  urls.map((dependencyUrl) =>\n                    this.prefetch(dependencyUrl, true)\n                  )\n                )\n              ),\n          ]\n    ).then(\n      // do not return any data\n      () => {},\n      // swallow prefetch errors\n      () => {}\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}