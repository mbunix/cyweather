{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Weather.module.scss\";\nimport { useStoreState } from \"easy-peasy\";\nimport WeatherBackground from \"./Background/Background\";\nimport Currently from \"./Currently/Currently\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport DailySlider from \"../Weather/WeatherSlider/DailySlider/DailySlider\";\nimport HourlySlider from \"../Weather/WeatherSlider/HourlySlider/HourlySlider\";\nimport { resetIdCounter } from \"react-tabs\";\n\nconst weather = props => {\n  const spinner = useStoreState(state => state.spinner);\n  const weather = useStoreState(state => state.weather.weatherData);\n  const city = useStoreState(state => state.location.locationCity);\n  const region = useStoreState(state => state.location.locationRegion);\n  resetIdCounter();\n  return __jsx(\"div\", {\n    className: styles.weather\n  }, __jsx(\"div\", {\n    className: styles[\"weather-wrap\"]\n  }, spinner.spinner === true && __jsx(\"div\", {\n    className: \"loading-spinner\"\n  }), weather && __jsx(React.Fragment, null, __jsx(WeatherBackground, {\n    condition: weather.weatherData.icon\n  }), __jsx(Currently, {\n    city: city,\n    region: region,\n    daily: weather.daily,\n    currently: weather.currently,\n    alerts: weather.alerts,\n    flags: weather.flags\n  }), __jsx(Tabs, {\n    className: styles.tabs,\n    selectedTabClassName: styles.selected\n  }, __jsx(TabList, {\n    className: \"list-group list-group-horizontal\"\n  }, __jsx(Tab, {\n    className: \"list-group-item\"\n  }, \"Daily\"), __jsx(Tab, {\n    className: \"list-group-item\"\n  }, \"Hourly\")), __jsx(TabPanel, null, __jsx(DailySlider, {\n    weather: weather\n  })), __jsx(TabPanel, null, __jsx(HourlySlider, {\n    weather: weather\n  }))))));\n};\n\nexport default weather;","map":{"version":3,"names":["styles","useStoreState","WeatherBackground","Currently","Tab","Tabs","TabList","TabPanel","DailySlider","HourlySlider","resetIdCounter","weather","props","spinner","state","weatherData","city","location","locationCity","region","locationRegion","icon","daily","currently","alerts","flags","tabs","selected"],"sources":["C:/Users/bentexstudiosio/Internship/cyweather/components/Weather/Weather.js"],"sourcesContent":["import styles from \"./Weather.module.scss\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport WeatherBackground from \"./Background/Background\";\r\nimport Currently from \"./Currently/Currently\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport DailySlider from \"../Weather/WeatherSlider/DailySlider/DailySlider\";\r\nimport HourlySlider from \"../Weather/WeatherSlider/HourlySlider/HourlySlider\";\r\nimport { resetIdCounter } from \"react-tabs\";\r\n\r\nconst weather = props => {\r\n  const spinner = useStoreState(state => state.spinner);\r\n  const weather = useStoreState(state => state.weather.weatherData);\r\n  const city = useStoreState(state => state.location.locationCity);\r\n  const region = useStoreState(state => state.location.locationRegion);\r\n  resetIdCounter();\r\n\r\n  return (\r\n    <div className={styles.weather}>\r\n      <div className={styles[\"weather-wrap\"]}>\r\n        {spinner.spinner === true && <div className=\"loading-spinner\"></div>}\r\n        {weather && (\r\n          <>\r\n            <WeatherBackground condition={weather.weatherData.icon} />\r\n            <Currently\r\n              city={city}\r\n              region={region}\r\n              daily={weather.daily}\r\n              currently={weather.currently}\r\n              alerts={weather.alerts}\r\n              flags={weather.flags}\r\n            />\r\n            <Tabs className={styles.tabs} selectedTabClassName={styles.selected}>\r\n              <TabList className=\"list-group list-group-horizontal\">\r\n                <Tab className=\"list-group-item\">Daily</Tab>\r\n                <Tab className=\"list-group-item\">Hourly</Tab>\r\n              </TabList>\r\n              <TabPanel>\r\n                <DailySlider weather={weather} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <HourlySlider weather={weather} />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default weather;"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;EACvB,MAAMC,OAAO,GAAGZ,aAAa,CAACa,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA7B;EACA,MAAMF,OAAO,GAAGV,aAAa,CAACa,KAAK,IAAIA,KAAK,CAACH,OAAN,CAAcI,WAAxB,CAA7B;EACA,MAAMC,IAAI,GAAGf,aAAa,CAACa,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeC,YAAzB,CAA1B;EACA,MAAMC,MAAM,GAAGlB,aAAa,CAACa,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAeG,cAAzB,CAA5B;EACAV,cAAc;EAEd,OACE;IAAK,SAAS,EAAEV,MAAM,CAACW;EAAvB,GACE;IAAK,SAAS,EAAEX,MAAM,CAAC,cAAD;EAAtB,GACGa,OAAO,CAACA,OAAR,KAAoB,IAApB,IAA4B;IAAK,SAAS,EAAC;EAAf,EAD/B,EAEGF,OAAO,IACN,4BACE,MAAC,iBAAD;IAAmB,SAAS,EAAEA,OAAO,CAACI,WAAR,CAAoBM;EAAlD,EADF,EAEE,MAAC,SAAD;IACE,IAAI,EAAEL,IADR;IAEE,MAAM,EAAEG,MAFV;IAGE,KAAK,EAAER,OAAO,CAACW,KAHjB;IAIE,SAAS,EAAEX,OAAO,CAACY,SAJrB;IAKE,MAAM,EAAEZ,OAAO,CAACa,MALlB;IAME,KAAK,EAAEb,OAAO,CAACc;EANjB,EAFF,EAUE,MAAC,IAAD;IAAM,SAAS,EAAEzB,MAAM,CAAC0B,IAAxB;IAA8B,oBAAoB,EAAE1B,MAAM,CAAC2B;EAA3D,GACE,MAAC,OAAD;IAAS,SAAS,EAAC;EAAnB,GACE,MAAC,GAAD;IAAK,SAAS,EAAC;EAAf,WADF,EAEE,MAAC,GAAD;IAAK,SAAS,EAAC;EAAf,YAFF,CADF,EAKE,MAAC,QAAD,QACE,MAAC,WAAD;IAAa,OAAO,EAAEhB;EAAtB,EADF,CALF,EAQE,MAAC,QAAD,QACE,MAAC,YAAD;IAAc,OAAO,EAAEA;EAAvB,EADF,CARF,CAVF,CAHJ,CADF,CADF;AAgCD,CAvCD;;AAyCA,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}