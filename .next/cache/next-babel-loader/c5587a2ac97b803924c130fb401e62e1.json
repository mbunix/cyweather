{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useIsMount } from \"../../utils/useIsMount.js\";\nimport { useStoreState } from \"easy-peasy\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport styles from \"./Search.module.scss\";\n\nvar search = function search(props) {\n  _s();\n\n  var coords = useStoreState(function (state) {\n    return state.location.locationLatitude;\n  });\n  var city = useStoreState(function (state) {\n    return state.location.locationCity;\n  });\n  var state = useStoreState(function (state) {\n    return state.location.locationState;\n  });\n  var weather = useStoreState(function (state) {\n    return state.weather.weatherData;\n  });\n  var isMount = useIsMount();\n  var searchOptions = {\n    types: [\"(regions)\"]\n  };\n  useEffect(function () {\n    if (isMount) {\n      if (\"google\" in window && typeof google === \"object\" && typeof google.maps === \"object\") {\n        window.myCallbackFunc = function () {};\n      } else {\n        var script = document.createElement(\"script\");\n        script.src = \"/api/google/&libraries=places&callback=myCallbackFunc\";\n        script.id = \"googleapis\";\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n      }\n    }\n  });\n  return __jsx(PlacesAutocomplete, {\n    value: props.address,\n    onChange: props.changed,\n    onSelect: props.selected,\n    searchOptions: searchOptions,\n    googleCallbackName: \"myCallbackFunc\"\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        suggestions = _ref.suggestions,\n        getSuggestionItemProps = _ref.getSuggestionItemProps,\n        loading = _ref.loading;\n\n    var _getInputProps = getInputProps({\n      placeholder: \"\".concat(city, \", \").concat(state)\n    }),\n        onChange = _getInputProps.onChange;\n\n    var readyStatus = \"Loading\";\n\n    if (coords === \"\") {\n      readyStatus = \"Checking Your Position..\";\n    }\n\n    if (coords !== \"\" && weather === \"\") {\n      readyStatus = \"Loading Weather Data...\";\n    }\n\n    if (weather !== \"\") {\n      readyStatus = \"Search location, zip...\";\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"input\", {\n      placeholder: \"\".concat(readyStatus),\n      value: props.address,\n      onChange: onChange,\n      className: [[\"form-control\"], [\"location-search-input\"], styles[\"form-control\"]].join(\" \")\n    }), __jsx(\"div\", {\n      className: [[\"list-group\"], styles[\"list-group\"]].join(\" \")\n    }, loading && __jsx(\"div\", {\n      className: \"list-group-item disabled\",\n      \"aria-disabled\": \"true\"\n    }, \"Loading Results...\"), suggestions.map(function (suggestion) {\n      var className = suggestion.active ? \"list-group-item list-group-item-action active\" : \"list-group-item list-group-item-action\";\n      return __jsx(\"div\", getSuggestionItemProps(suggestion, {\n        className: className\n      }), suggestion.description);\n    })));\n  });\n};\n\n_s(search, \"qN+86itmyiLKpBEUK1ot3SK9Sk4=\", false, function () {\n  return [useStoreState, useStoreState, useStoreState, useStoreState, useIsMount];\n});\n\nexport default search;","map":{"version":3,"names":["useEffect","useIsMount","useStoreState","PlacesAutocomplete","styles","search","props","coords","state","location","locationLatitude","city","locationCity","locationState","weather","weatherData","isMount","searchOptions","types","window","google","maps","myCallbackFunc","script","document","createElement","src","id","async","defer","head","appendChild","address","changed","selected","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","onChange","readyStatus","join","map","suggestion","className","active","description"],"sources":["C:/Users/bentexstudiosio/Internship/cyweather/components/Search/Search.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useIsMount } from \"../../utils/useIsMount.js\";\r\nimport { useStoreState } from \"easy-peasy\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst search = props => {\r\n  const coords = useStoreState(state => state.location.locationLatitude);\r\n  const city = useStoreState(state => state.location.locationCity);\r\n  const state = useStoreState(state => state.location.locationState);\r\n  const weather = useStoreState(state => state.weather.weatherData);\r\n  const isMount = useIsMount();\r\n\r\n  const searchOptions = {\r\n    types: [\"(regions)\"]\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMount) {\r\n      if (\"google\" in window && typeof google === \"object\" && typeof google.maps === \"object\") {\r\n        window.myCallbackFunc = function() {};\r\n      } else {\r\n        const script = document.createElement(\"script\");\r\n        script.src = `/api/google/&libraries=places&callback=myCallbackFunc`;\r\n        script.id = \"googleapis\";\r\n        script.async = true;\r\n        script.defer = true;\r\n        document.head.appendChild(script);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PlacesAutocomplete\r\n      value={props.address}\r\n      onChange={props.changed}\r\n      onSelect={props.selected}\r\n      searchOptions={searchOptions}\r\n      googleCallbackName=\"myCallbackFunc\">\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => {\r\n        const { onChange } = getInputProps({\r\n          placeholder: `${city}, ${state}`\r\n        });\r\n\r\n        let readyStatus = \"Loading\";\r\n\r\n        if (coords === \"\") {\r\n          readyStatus = \"Checking Your Position..\";\r\n        }\r\n        if (coords !== \"\" && weather === \"\") {\r\n          readyStatus = \"Loading Weather Data...\";\r\n        }\r\n        if (weather !== \"\") {\r\n          readyStatus = \"Search location, zip...\";\r\n        }\r\n\r\n        return (\r\n          <>\r\n            <input\r\n              placeholder={`${readyStatus}`}\r\n              value={props.address}\r\n              onChange={onChange}\r\n              className={[[\"form-control\"], [\"location-search-input\"], styles[\"form-control\"]].join(\r\n                \" \"\r\n              )}\r\n            />\r\n            <div className={[[\"list-group\"], styles[\"list-group\"]].join(\" \")}>\r\n              {loading && (\r\n                <div className=\"list-group-item disabled\" aria-disabled=\"true\">\r\n                  Loading Results...\r\n                </div>\r\n              )}\r\n              {suggestions.map(suggestion => {\r\n                const className = suggestion.active\r\n                  ? \"list-group-item list-group-item-action active\"\r\n                  : \"list-group-item list-group-item-action\";\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className\r\n                    })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        );\r\n      }}\r\n    </PlacesAutocomplete>\r\n  );\r\n};\r\n\r\nexport default search;"],"mappings":"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"},"metadata":{},"sourceType":"module"}