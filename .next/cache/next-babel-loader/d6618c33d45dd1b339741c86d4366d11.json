{"ast":null,"code":"export const calculatePressure = pressure => parseFloat(pressure * 0.0295301).toFixed(2);\nexport const formatAsPercentage = x => `${Math.round(x * 100)} %`;\nexport function getDirection(angle) {\n  var directions = [\"N\", \"NW\", \"W\", \"SW\", \"S\", \"SE\", \"E\", \"NE\"];\n  return directions[Math.round(((angle %= 360) < 0 ? angle + 360 : angle) / 45) % 8];\n}\nexport function getCondition(condition) {\n  switch (condition) {\n    case \"clear-day\":\n      return \"Clear\";\n\n    case \"clear-night\":\n      return \"Clear\";\n\n    case \"rain\":\n      return \"Rain\";\n\n    case \"snow\":\n      return \"Snow\";\n\n    case \"sleet\":\n      return \"Sleet\";\n\n    case \"wind\":\n      return \"Wind\";\n\n    case \"fog\":\n      return \"Fog\";\n\n    case \"cloudy\":\n      return \"Cloudy\";\n\n    case \"partly-cloudy-day\":\n      return \"Partly Cloudy\";\n\n    case \"partly-cloudy-night\":\n      return \"Partly Cloudy\";\n\n    case \"hail\":\n      return \"Hail\";\n\n    case \"thunderstorm\":\n      return \"Thunderstorm\";\n\n    case \"tornado\":\n      return \"Tornado\";\n\n    default:\n      console.log(\"Error: No Condition Set\");\n  }\n}\nexport const Moon = {\n  phases: [\"New Moon\", \"Waxing Crescent Moon\", \"Quarter Moon\", \"Waxing Gibbous Moon\", \"Full Moon\", \"Waning Gibbous Moon\", \"Last Quarter Moon\", \"Waning Crescent Moon\"],\n  phase: function (year, month, day) {\n    let c,\n        b,\n        jd,\n        e = 0;\n\n    if (month < 3) {\n      year--;\n      month += 12;\n    }\n\n    ++month;\n    c = 365.25 * year;\n    e = 30.6 * month;\n    jd = c + e + day - 694039.09; // jd is total days elapsed\n\n    jd /= 29.5305882; // divide by the moon cycle\n\n    b = parseInt(jd); // int(jd) -> b, take integer part of jd\n\n    jd -= b; // subtract integer part to leave fractional part of original jd\n\n    b = Math.round(jd * 8); // scale fraction from 0-8 and round\n\n    if (b >= 8) b = 0; // 0 and 8 are the same so turn 8 into 0\n\n    return {\n      phase: b,\n      name: Moon.phases[b]\n    };\n  }\n};","map":{"version":3,"names":["calculatePressure","pressure","parseFloat","toFixed","formatAsPercentage","x","Math","round","getDirection","angle","directions","getCondition","condition","console","log","Moon","phases","phase","year","month","day","c","b","jd","e","parseInt","name"],"sources":["C:/Users/bentexstudiosio/Internship/cyweather/utils/calculateWeather.js"],"sourcesContent":["export const calculatePressure = pressure => parseFloat(pressure * 0.0295301).toFixed(2);\r\nexport const formatAsPercentage = x => `${Math.round(x * 100)} %`;\r\n\r\nexport function getDirection(angle) {\r\n  var directions = [\"N\", \"NW\", \"W\", \"SW\", \"S\", \"SE\", \"E\", \"NE\"];\r\n  return directions[Math.round(((angle %= 360) < 0 ? angle + 360 : angle) / 45) % 8];\r\n}\r\n\r\nexport function getCondition(condition) {\r\n  switch (condition) {\r\n    case \"clear-day\":\r\n      return \"Clear\";\r\n    case \"clear-night\":\r\n      return \"Clear\";\r\n    case \"rain\":\r\n      return \"Rain\";\r\n    case \"snow\":\r\n      return \"Snow\";\r\n    case \"sleet\":\r\n      return \"Sleet\";\r\n    case \"wind\":\r\n      return \"Wind\";\r\n    case \"fog\":\r\n      return \"Fog\";\r\n    case \"cloudy\":\r\n      return \"Cloudy\";\r\n    case \"partly-cloudy-day\":\r\n      return \"Partly Cloudy\";\r\n    case \"partly-cloudy-night\":\r\n      return \"Partly Cloudy\";\r\n    case \"hail\":\r\n      return \"Hail\";\r\n    case \"thunderstorm\":\r\n      return \"Thunderstorm\";\r\n    case \"tornado\":\r\n      return \"Tornado\";\r\n    default:\r\n      console.log(\"Error: No Condition Set\");\r\n  }\r\n}\r\n\r\nexport const Moon = {\r\n  phases: [\r\n    \"New Moon\",\r\n    \"Waxing Crescent Moon\",\r\n    \"Quarter Moon\",\r\n    \"Waxing Gibbous Moon\",\r\n    \"Full Moon\",\r\n    \"Waning Gibbous Moon\",\r\n    \"Last Quarter Moon\",\r\n    \"Waning Crescent Moon\"\r\n  ],\r\n  phase: function(year, month, day) {\r\n    let c,\r\n      b,\r\n      jd,\r\n      e = 0;\r\n\r\n    if (month < 3) {\r\n      year--;\r\n      month += 12;\r\n    }\r\n\r\n    ++month;\r\n    c = 365.25 * year;\r\n    e = 30.6 * month;\r\n    jd = c + e + day - 694039.09; // jd is total days elapsed\r\n    jd /= 29.5305882; // divide by the moon cycle\r\n    b = parseInt(jd); // int(jd) -> b, take integer part of jd\r\n    jd -= b; // subtract integer part to leave fractional part of original jd\r\n    b = Math.round(jd * 8); // scale fraction from 0-8 and round\r\n\r\n    if (b >= 8) b = 0; // 0 and 8 are the same so turn 8 into 0\r\n    return { phase: b, name: Moon.phases[b] };\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGC,QAAQ,IAAIC,UAAU,CAACD,QAAQ,GAAG,SAAZ,CAAV,CAAiCE,OAAjC,CAAyC,CAAzC,CAAtC;AACP,OAAO,MAAMC,kBAAkB,GAAGC,CAAC,IAAK,GAAEC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,GAAf,CAAoB,IAAvD;AAEP,OAAO,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;EAClC,IAAIC,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,GAAlC,EAAuC,IAAvC,CAAjB;EACA,OAAOA,UAAU,CAACJ,IAAI,CAACC,KAAL,CAAW,CAAC,CAACE,KAAK,IAAI,GAAV,IAAiB,CAAjB,GAAqBA,KAAK,GAAG,GAA7B,GAAmCA,KAApC,IAA6C,EAAxD,IAA8D,CAA/D,CAAjB;AACD;AAED,OAAO,SAASE,YAAT,CAAsBC,SAAtB,EAAiC;EACtC,QAAQA,SAAR;IACE,KAAK,WAAL;MACE,OAAO,OAAP;;IACF,KAAK,aAAL;MACE,OAAO,OAAP;;IACF,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,OAAL;MACE,OAAO,OAAP;;IACF,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,KAAL;MACE,OAAO,KAAP;;IACF,KAAK,QAAL;MACE,OAAO,QAAP;;IACF,KAAK,mBAAL;MACE,OAAO,eAAP;;IACF,KAAK,qBAAL;MACE,OAAO,eAAP;;IACF,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,cAAL;MACE,OAAO,cAAP;;IACF,KAAK,SAAL;MACE,OAAO,SAAP;;IACF;MACEC,OAAO,CAACC,GAAR,CAAY,yBAAZ;EA5BJ;AA8BD;AAED,OAAO,MAAMC,IAAI,GAAG;EAClBC,MAAM,EAAE,CACN,UADM,EAEN,sBAFM,EAGN,cAHM,EAIN,qBAJM,EAKN,WALM,EAMN,qBANM,EAON,mBAPM,EAQN,sBARM,CADU;EAWlBC,KAAK,EAAE,UAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2B;IAChC,IAAIC,CAAJ;IAAA,IACEC,CADF;IAAA,IAEEC,EAFF;IAAA,IAGEC,CAAC,GAAG,CAHN;;IAKA,IAAIL,KAAK,GAAG,CAAZ,EAAe;MACbD,IAAI;MACJC,KAAK,IAAI,EAAT;IACD;;IAED,EAAEA,KAAF;IACAE,CAAC,GAAG,SAASH,IAAb;IACAM,CAAC,GAAG,OAAOL,KAAX;IACAI,EAAE,GAAGF,CAAC,GAAGG,CAAJ,GAAQJ,GAAR,GAAc,SAAnB,CAdgC,CAcF;;IAC9BG,EAAE,IAAI,UAAN,CAfgC,CAed;;IAClBD,CAAC,GAAGG,QAAQ,CAACF,EAAD,CAAZ,CAhBgC,CAgBd;;IAClBA,EAAE,IAAID,CAAN,CAjBgC,CAiBvB;;IACTA,CAAC,GAAGhB,IAAI,CAACC,KAAL,CAAWgB,EAAE,GAAG,CAAhB,CAAJ,CAlBgC,CAkBR;;IAExB,IAAID,CAAC,IAAI,CAAT,EAAYA,CAAC,GAAG,CAAJ,CApBoB,CAoBb;;IACnB,OAAO;MAAEL,KAAK,EAAEK,CAAT;MAAYI,IAAI,EAAEX,IAAI,CAACC,MAAL,CAAYM,CAAZ;IAAlB,CAAP;EACD;AAjCiB,CAAb"},"metadata":{},"sourceType":"module"}